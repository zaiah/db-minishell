minishell
	in the code...

aa - more lib stuff...
	write a record (could not figure out how to get this to work)
		got to account for all variables (annoying)
		got to know what can be blank and what can't (application can stop this before write)
		knowing or figuring datatype is usually very necessary
x	modify a record
		having one record at a time is BEST
		but multiple records might work too
x	remove a record
		same as modify
	trash a record
		same as modify but doesn't truly delete anything
	check if record is in database
		will do this a lot
	get id (should be a one line function)
	
-	little db shell
		--select --from <table>
		--write --to <table>
		--modify / --update <table>
			--this --that
			--where <clause>
		--remove 
			--where
			--id

	db shell is written - last weekend... hopefully...
	
	column_names_to_vars()
		get the column names of databases and put them in vars
	
	load_vars_from_db() --where ""
	
	tmp_file() - return a temp file to write to/or just use the name $TMP 
		(but we're starting subshells, so it's fine to return a ref)
	
	
aa 
	use table names within your library
	build a profile
	deps, run and something else standardizes our cycle

	
design your profiles
	gentoo
	freebsd?
	solaris
	arch

vmsuite
	still building
	
hr
	makes a new host on a server with either lighttpd, apache, or some other host
	have to take over the task of configuring the server for virtual hosting
	also must configure the directory to create and serve virtual hosts

	new
	remove
	update
	install
	uninstall
	help
	configure <stack>

maintlib (to maintain your stupid ass library) nigga...
	add
	remove
	pull
	push
	modify

	#1 - Preliminary Deployment of a Fresh Box
A) 	<Install O/S (or at least run from boot disc)
	# Give the box a record, and a name, etc.
	shelton --setup <fresh box> ... whatever...blablabla
	
	# Run shel on this new host
	# We're going to assume this is our first installation
	shelton --run (profile name) --on (shelton --last-host)
		Profile Name:
		DEPS=() # Shelton runs checks for these ahead of time and gets wares...
		RUN () {
			echo "Fetching vmsuite"
			git clone wuboi@cali.hyperliteral.com:~/vmsuite.git # won't work b/c of access
			cd vmsuite
			./vmgo.sh --first-run --install --verbose 	# for logging
			
			echo "Getting virtual box"
			vmmaster --download --deploy local
			
			echo "Building nodes"
			vmbuilder --new auto  		# Using PXE is smart here
		}

			
	#2 - Create a labor server
	B)  <Insatll O/S>
		shelton --setup ...
		
	#3 - Create a mail server

	#4 - Create a web server

	#5 - Create alto

	#6 - Create 2FS, 2DBs, 10 Nodes, centralize these records

	#7 - Redeploy your old box
   
vm
	??? research mostly

ha (highavailability)
	not totally certain of what this should be yet.
	shell script that doubles nodes? and makes record in dns? and makes sure box is in a certain area?

little tool to process .manifest files...
	(can build documentation this way)

yet to rebuild sites on a production server
yet to build first nodes
yet to build alto network
yet to build alto app
yet to do fun stuff


start building pieces of what you need for nsdeth (just add to readme if you get time)
	a far better uploader
	better filters and search logic
	search
	
	
nodes and stuff (i think i need linode)
	testing today for certain

? call grandma

you should probably drop what you can't carry... (monitors and keyboards)	


not much left on this:
buildlib 
	--namespace (
		when using library functions, use a certain namespace to limit confusion)
	--specify-with
		make sure this increments and shows you what's being added as you go


snap business cards...
rolodexxxxxxxx

consultant:
	name
	numbers
	emails
	times I've contacted
	what you do
	please contact or not?
	
real estate developer:
	*the above
	a quote
	what properties am i looking at with this person

broker
	*the above
	companies in my portfolio?

business cards
	link hyperliteral's blog to vokayent
	you might need to put the sites up somehwere...

time is always at a premium:

steve leggit?

sp
	starts a project, still kind of unnecessary...
	deploy
	at
	...?
